{"ast":null,"code":"var _jsxFileName = \"/home/slinky/course_work/stranger_things_project/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { BASE_URL } from '../constants'; //TO DO\n// - When user logs in, save username the same way as token in Local Storage\n// - Make Login and Register links disappear\n// - When user logs out, fix the link that takes them to the log in screen\n// - \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function login(username, password, setToken) {\n  const response = await fetch(BASE_URL + 'users/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username,\n        password\n      }\n    })\n  });\n  const result = await response.json();\n  const userName = result.data.username;\n  const token = result.data.token;\n  setToken(token);\n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\"username\", userName);\n}\n\nasync function register(setToken, username, password, confirmedPassword) {\n  if (password !== confirmedPassword) {\n    alert(\"Passwords don't match\");\n    return;\n  }\n\n  const response = await fetch(BASE_URL + 'users/register', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username,\n        password\n      }\n    })\n  });\n  console.log(response);\n  const result = await response.json();\n  const token = result.data.token; //TO DO\n  // - Fix this code to set the username in local storage\n\n  const userName = result.data.username;\n  setToken(token);\n  localStorage.setItem(\"token\", token);\n  localStorage.setItem('username', userName);\n  console.log(userName);\n} // async function userData(){\n//     const token = localStorage.getItem('token')\n//     const response = await fetch(BASE_URL + 'users/me', {\n//         headers: {\n//             'Content-Type': 'application/json',\n//             'Authorization': \"BEARER \" + token,\n//         },\n//         })\n//     const result = await response.json();\n//     const userName = result.data.username\n//     localStorage.setItem(\"username\", userName)\n// }\n\n\nconst Login = ({\n  setToken,\n  match,\n  isLoggedIn,\n  history\n}) => {\n  _s();\n\n  const [username, setUsername] = useState(\"your username\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmedPassword, setConfirmedPassword] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      if (match.url === \"/register\") register(setToken, username, password, confirmedPassword);\n      if (match.url === \"/login\") login(username, password, setToken);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: ({\n          target: {\n            value\n          }\n        }) => setUsername(value),\n        className: \"form-control\",\n        id: \"exampleFormControlInput\",\n        placeholder: \"your username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: ({\n          target: {\n            value\n          }\n        }) => setPassword(value),\n        className: \"form-control\",\n        id: \"examleFormControlInput\",\n        placeholder: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), match.url === \"/register\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: ({\n          target: {\n            value\n          }\n        }) => setConfirmedPassword(value),\n        value: confirmedPassword,\n        className: \"form-control\",\n        id: \"exampleFormControlInput\",\n        placeholder: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mb-3\",\n        onClick: () => {\n          isLoggedIn && history.push(\"/home\");\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), match.url === \"/register\" ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \" Already have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \" Don't have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"88P04ZJ7ezl6/tI4wiGOZ+t0zZs=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/slinky/course_work/stranger_things_project/src/components/Login.js"],"names":["React","useState","Link","BASE_URL","login","username","password","setToken","response","fetch","method","headers","body","JSON","stringify","user","result","json","userName","data","token","localStorage","setItem","register","confirmedPassword","alert","console","log","Login","match","isLoggedIn","history","setUsername","setPassword","setConfirmedPassword","e","preventDefault","url","target","value","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { BASE_URL } from '../constants';\n\n//TO DO\n// - When user logs in, save username the same way as token in Local Storage\n// - Make Login and Register links disappear\n// - When user logs out, fix the link that takes them to the log in screen\n// - \n\nasync function login(username, password, setToken) {\n    const response = await fetch(BASE_URL + 'users/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            user: {\n                username,\n                password,\n            },\n        }),\n    })\n\n    const result = await response.json();\n    const userName = result.data.username\n    const token = result.data.token;\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"username\", userName)\n}\n\nasync function register(setToken, username, password, confirmedPassword){\n    if (password !== confirmedPassword){\n        alert(\"Passwords don't match\");\n        return;\n    }\n    const response = await fetch(BASE_URL + 'users/register', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            user: {\n                username,\n                password,\n            },\n        }),\n    })\n    console.log(response)\n\n    const result = await response.json();\n    const token = result.data.token;\n    //TO DO\n    // - Fix this code to set the username in local storage\n    const userName = result.data.username\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem('username', userName)\n    console.log(userName)\n}\n\n// async function userData(){\n//     const token = localStorage.getItem('token')\n//     const response = await fetch(BASE_URL + 'users/me', {\n//         headers: {\n//             'Content-Type': 'application/json',\n//             'Authorization': \"BEARER \" + token,\n//         },\n//         })\n//     const result = await response.json();\n//     const userName = result.data.username\n//     localStorage.setItem(\"username\", userName)\n// }\n\nconst Login = ({ setToken, match, isLoggedIn, history }) => {\n    const [username, setUsername] = useState(\"your username\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmedPassword, setConfirmedPassword] = useState(\"\");\n\n    return (\n        <form\n            onSubmit={(e) =>{\n                e.preventDefault();\n                if (match.url === \"/register\") register(setToken, username, password, confirmedPassword)\n                if (match.url === \"/login\") login(username, password, setToken)\n            }}\n        >\n            <div className=\"mb-3\">\n                <label className=\"form-label\">\n                    Username\n                </label>\n                <input\n                    type=\"text\"\n                    value={username}\n                    onChange={({target: {value}}) => setUsername(value)}\n                    className=\"form-control\"\n                    id=\"exampleFormControlInput\"\n                    placeholder=\"your username\"\n                />\n            </div>\n            <div className=\"mb-3\">\n                <label className=\"form-label\">\n                    Password\n                </label>\n                <input\n                    type=\"password\"\n                    value={password}\n                    onChange={({target: {value}}) => setPassword(value)}\n                    className=\"form-control\"\n                    id=\"examleFormControlInput\"\n                    placeholder=\"\"\n                />\n            </div>\n            {\n            match.url === \"/register\" ? (\n            <div className=\"mb-3\">\n                <label className=\"form-label\">\n                    Confirm Password\n                </label>\n                <input \n                    type=\"password\"\n                    onChange={({target: {value}}) => setConfirmedPassword(value)}\n                    value={confirmedPassword}\n                    className=\"form-control\"\n                    id=\"exampleFormControlInput\"\n                    placeholder=\"\"\n                />\n            </div>\n            ) : null}\n            <div className=\"col-auto\">\n                <button type=\"submit\" className=\"btn btn-primary mb-3\"\n                    onClick={() => {isLoggedIn && history.push(\"/home\")}}\n                >\n                    Submit\n                </button>\n                {\n                    match.url === \"/register\" ?\n                    <Link to=\"/login\"> Already have an account?</Link>\n                    : <Link to=\"/register\"> Don't have an account?</Link>\n                }\n            </div>\n        </form>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}