{"ast":null,"code":"var _jsxFileName = \"/home/slinky/course_work/stranger_things_project/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BASE_URL } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = props => {\n  _s();\n\n  const postsUrl = BASE_URL + '/posts';\n\n  async function getPosts() {\n    const posts = await axios.get(postsUrl);\n    console.log(posts);\n  }\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  function makeHeaders(token) {\n    //if token is not null\n    return {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer' + token\n    }; //else\n\n    return {\n      'Content-Type': 'application/json'\n    };\n  }\n\n  const [posts, setPosts] = useState([]);\n  const [name, setName] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Create a new post \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: async event => {\n        event.preventDefault();\n        console.log(name);\n\n        try {\n          const response = await fetch(postsUrl, {\n            method: 'POST',\n            header: makeHeaders(token),\n            body: JSON.stringify({\n              title,\n              description,\n              price,\n              location,\n              willDeliver\n            })\n          });\n          const result = await response.json();\n          setPosts([...posts, result.data.name]);\n        } catch (err) {\n          console.error(err);\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        onChange: event => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Posts, \"IMKq7CLpcF8vCvtG5s5yLE4UR1Q=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/slinky/course_work/stranger_things_project/src/components/Posts.js"],"names":["React","useEffect","useState","BASE_URL","Posts","props","postsUrl","getPosts","posts","axios","get","console","log","makeHeaders","token","setPosts","name","setName","event","preventDefault","response","fetch","method","header","body","JSON","stringify","title","description","price","location","willDeliver","result","json","data","err","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,cAAzB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAMC,QAAQ,GAAGH,QAAQ,GAAG,QAA5B;;AAEA,iBAAeI,QAAf,GAAyB;AACrB,UAAMC,KAAK,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAUJ,QAAV,CAApB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH;;AAEDP,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASM,WAAT,CAAqBC,KAArB,EAA4B;AACxB;AACA,WAAO;AACH,sBAAgB,kBADb;AAEH,uBAAiB,WAAWA;AAFzB,KAAP,CAFwB,CAMxB;;AACA,WAAO;AACH,sBAAgB;AADb,KAAP;AAGH;;AAED,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AAEA,sBAAQ;AAAA,4BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,eAEJ;AACI,MAAA,QAAQ,EAAE,MAAOgB,KAAP,IAAiB;AACvBA,QAAAA,KAAK,CAACC,cAAN;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;;AACA,YAAI;AACA,gBAAMI,QAAQ,GAAG,MAAMC,KAAK,CACxBf,QADwB,EAExB;AACIgB,YAAAA,MAAM,EAAE,MADZ;AAEIC,YAAAA,MAAM,EAAEV,WAAW,CAACC,KAAD,CAFvB;AAGIU,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,cAAAA,KADiB;AAEjBC,cAAAA,WAFiB;AAGjBC,cAAAA,KAHiB;AAIjBC,cAAAA,QAJiB;AAKjBC,cAAAA;AALiB,aAAf;AAHV,WAFwB,CAA5B;AAcA,gBAAMC,MAAM,GAAG,MAAMZ,QAAQ,CAACa,IAAT,EAArB;AACAlB,UAAAA,QAAQ,CAAC,CACL,GAAGP,KADE,EAELwB,MAAM,CAACE,IAAP,CAAYlB,IAFP,CAAD,CAAR;AAIH,SApBD,CAoBE,OAAOmB,GAAP,EAAY;AACVxB,UAAAA,OAAO,CAACyB,KAAR,CAAcD,GAAd;AACH;AACJ,OA3BL;AAAA,6BA8BI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,MAFhB;AAGI,QAAA,QAAQ,EAAGjB,KAAD,IAAW,CAEpB;AALL;AAAA;AAAA;AAAA;AAAA;AA9BJ;AAAA;AAAA;AAAA;AAAA,YAFI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AA2CH,CAtED;;GAAMd,K;;KAAAA,K;AAwEN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BASE_URL } from '../constants'\n\nconst Posts = (props) => {\n    const postsUrl = BASE_URL + '/posts'\n\n    async function getPosts(){\n        const posts = await axios.get(postsUrl);\n        console.log(posts);\n    }\n\n    useEffect(() => {\n        getPosts();\n    }, [])\n\n    function makeHeaders(token) {\n        //if token is not null\n        return {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        //else\n        return {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const [posts, setPosts] = useState([]);\n    const [name, setName] = useState(\"\")\n\n    return (<div>\n        <h1> Create a new post </h1>\n        <form\n            onSubmit={async (event) => {\n                event.preventDefault();\n                console.log(name);\n                try {\n                    const response = await fetch(\n                        postsUrl, \n                        {\n                            method: 'POST',\n                            header: makeHeaders(token),\n                            body: JSON.stringify({\n                                title,\n                                description,\n                                price,\n                                location,\n                                willDeliver,\n                            }),\n                        }\n                    );\n                    const result = await response.json();\n                    setPosts([\n                        ...posts,\n                        result.data.name\n                    ])\n                } catch (err) {\n                    console.error(err);\n                }\n            }}\n            >\n            \n            <input\n                type='text'\n                placeholder='Name'\n                onChange={(event) => {\n\n                }}\n            >\n            </input>\n        </form>\n    </div>\n    )\n}\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}