{"version":3,"sources":["components/Search.js","components/Posts.js","constants.js","components/Login.js","components/Home.js","components/NewPosts.js","components/SinglePost.js","apiHelpers.js","index.js"],"names":["page","setFilteredResults","useState","searchTerm","setSearchTerm","value","onChange","event","target","myFilteredPosts","toLowerCase","filter","post","index","title","includes","filterPosts","placeholder","Posts","isLoggedIn","history","filteredResults","useEffect","Search","map","description","price","author","username","location","onClick","push","_id","BASE_URL","password","setToken","a","fetch","method","headers","body","JSON","stringify","user","response","json","result","token","data","localStorage","setItem","confirmedPassword","alert","console","log","Login","match","setUsername","setPassword","setConfirmedPassword","onSubmit","e","preventDefault","url","register","login","className","type","id","to","getItem","userName","Home","userData","removeItem","NewPosts","setPosts","then","catch","error","posts","makeHeaders","getPosts","setTitle","setDescription","setPrice","setLocation","willDeliver","setWillDeliver","header","name","SinglePost","App","setPage","getPage","storedToken","path","render","routeProps","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.04802b5e.chunk.js","sourcesContent":["import React, {useState} from \"react\";\n\nexport default ({page, setFilteredResults}) => {\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    function filterPosts(page, searchTerm){\n        searchTerm = searchTerm.toLowerCase()\n        return page.filter((post, index) => {\n            const postTitle = post.title.toLowerCase();\n            return postTitle.includes(searchTerm)\n        })\n    }\n\n    return (<div>\n        <label>Search Posts</label>\n        <input \n        value={searchTerm}\n        onChange={\n            (event) => {\n                setSearchTerm(event.target.value);\n                const myFilteredPosts = filterPosts(page, event.target.value);\n                setFilteredResults(myFilteredPosts)\n            }\n        } placeholder=\"search\"/>\n    </div>)\n}","import React, { useEffect, useState } from \"react\";\nimport Search from \"./Search\";\n\nconst Posts = ({isLoggedIn, history, page}) => {\n    const [filteredResults, setFilteredResults] = useState(page)\n\n    useEffect(() => {\n        setFilteredResults(page)\n    }, [page])\n    \n    return (<div> \n        <Search page={page} setFilteredResults={setFilteredResults}/>\n            <div>     \n                {\n                filteredResults.map((post) => {\n                return (<div key={post._id}>\n                    <h3>{post.title}</h3>\n                    <p>{post.description}</p>\n                    <p>Price: {post.price}</p>\n                    <p>Seller: {post.author.username}</p>\n                    <p>Location: {post.location}</p>\n                    {isLoggedIn && <div>\n                        <button\n                        onClick={() => {history.push(\"/posts/\" + post._id)}}\n                        >Send Message</button>\n                        </div>}\n                </div>)\n                })\n            } \n            </div>\n            </div>)\n    \n}\n\nexport default Posts;","const BASE_URL = \"https://strangers-things.herokuapp.com/api/2107-CSU-RM-WEB-PT/\"\nconst appName = \"Stranger Things\"\n\nexport {\n    BASE_URL,\n    appName\n}","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { BASE_URL } from '../constants';\n\n//TO DO\n// - When user logs in, save username the same way as token in Local Storage\n// - Make Login and Register links disappear\n// - When user logs out, fix the link that takes them to the log in screen\n// - \n\nasync function login(username, password, setToken) {\n    const response = await fetch(BASE_URL + 'users/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            user: {\n                username,\n                password,\n            },\n        }),\n    })\n\n    const result = await response.json();\n    const token = result.data.token;\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n}\n\nasync function register(setToken, username, password, confirmedPassword){\n    if (password !== confirmedPassword){\n        alert(\"Passwords don't match\");\n        return;\n    }\n    const response = await fetch(BASE_URL + 'users/register', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            user: {\n                username,\n                password,\n            },\n        }),\n    })\n    console.log(response)\n    const result = await response.json();\n    const token = result.data.token;\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n}\n\nconst Login = ({ setToken, match, isLoggedIn, history }) => {\n    const [username, setUsername] = useState(\"your username\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmedPassword, setConfirmedPassword] = useState(\"\");\n\n    return (\n        <form\n            onSubmit={(e) =>{\n                e.preventDefault();\n                if (match.url === \"/register\") register(setToken, username, password, confirmedPassword)\n                if (match.url === \"/login\") login(username, password, setToken)\n            }}\n        >\n            <div className=\"mb-3\">\n                <label className=\"form-label\">\n                    Username\n                </label>\n                <input\n                    type=\"text\"\n                    value={username}\n                    onChange={({target: {value}}) => setUsername(value)}\n                    className=\"form-control\"\n                    id=\"exampleFormControlInput\"\n                    placeholder=\"your username\"\n                />\n            </div>\n            <div className=\"mb-3\">\n                <label className=\"form-label\">\n                    Password\n                </label>\n                <input\n                    type=\"password\"\n                    value={password}\n                    onChange={({target: {value}}) => setPassword(value)}\n                    className=\"form-control\"\n                    id=\"examleFormControlInput\"\n                    placeholder=\"\"\n                />\n            </div>\n            {\n            match.url === \"/register\" ? (\n            <div className=\"mb-3\">\n                <label className=\"form-label\">\n                    Confirm Password\n                </label>\n                <input \n                    type=\"password\"\n                    onChange={({target: {value}}) => setConfirmedPassword(value)}\n                    value={confirmedPassword}\n                    className=\"form-control\"\n                    id=\"exampleFormControlInput\"\n                    placeholder=\"\"\n                />\n            </div>\n            ) : null}\n            <div className=\"col-auto\">\n                <button type=\"submit\" className=\"btn btn-primary mb-3\"\n                    onClick={() => {isLoggedIn && history.push(\"/home\")}}\n                >\n                    Submit\n                </button>\n                {\n                    match.url === \"/register\" ?\n                    <Link to=\"/login\"> Already have an account?</Link>\n                    : <Link to=\"/register\"> Don't have an account?</Link>\n                }\n            </div>\n        </form>\n    )\n}\n\nexport default Login;","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { BASE_URL } from '../constants'\n\n//TO DO\n// - When the user is logged in, let them see their own posts (after fixing NewPosts)\nasync function userData(){\n    const token = localStorage.getItem('token')\n    const response = await fetch(BASE_URL + 'users/me', {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': \"BEARER \" + token,\n        },\n        })\n    const result = await response.json();\n    const userName = result.data.username\n    localStorage.setItem(\"username\", userName)\n}\n\nfunction logout(){\n    fetch(BASE_URL +'/users/login', {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            user: {\n            username: '',\n            password: ''\n            }\n        })\n    })\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"username\")\n}\n\nconst Home = ({isLoggedIn, history}) => {\n    const token = localStorage.getItem(\"token\")\n    const username = localStorage.getItem(\"username\")\n\n    useEffect(() => {\n        userData()\n    }, []);\n\n    return (\n        <div>\n            <h2>Welcome to Stranger's Things!</h2>\n            <h3>Logged in as {username}</h3>\n            <button onClick={() => {logout()}}>Logout</button>\n        </div>\n    )\n}\n\nexport default Home;","//NOTE\n// - This component is not loading on the homepage for some reason\n\nimport React, { useEffect, useState } from \"react\";\nimport { BASE_URL } from '../constants'\n\nconst NewPosts = ({isLoggedIn}) => {\n    console.log(\"heyo\")\n    const postsUrl = BASE_URL + '/posts'\n    // const axios = require('axios').default;\n\n    async function getPosts(setPosts){\n        // const posts = await axios.get(postsUrl);\n        fetch(BASE_URL + '/posts')\n        .then(response => response.json())\n        .then(result => {\n            console.log(result);\n        })\n        .catch(console.error);\n        setPosts(result.data.posts)\n    }\n\n    useEffect(() => {\n        getPosts();\n    }, [])\n\n    function makeHeaders(token) {\n        //if token is not null\n        return {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        //else\n        return {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const [posts, setPosts] = useState([]);\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const [location, setLocation] = useState(\"\");\n    const [willDeliver, setWillDeliver] = useState(false)\n\n    return (<div>\n        <h1> Create a new post </h1>\n        <form\n            onSubmit={async (event) => {\n                event.preventDefault();\n                try {\n                    const response = await fetch(\n                        postsUrl, \n                        {\n                            method: 'POST',\n                            header: makeHeaders(token),\n                            body: JSON.stringify({\n                                title,\n                                description,\n                                price,\n                                location,\n                                willDeliver,\n                            }),\n                        }\n                    );\n                    const result = await response.json();\n                    setPosts([\n                        ...posts,\n                        result.data.name\n                    ])\n                } catch (err) {\n                    console.error(err);\n                }\n            }}\n            >\n            \n            <input\n                type='text'\n                placeholder='title'\n                value={title}\n                onChange={(event) => {\n                    setTitle(event.target.value)\n                }}\n            >\n            </input>\n            <input\n                type='text'\n                placeholder='description'\n                value={description}\n                onChange={(event) => {\n                    setDescription(event.target.value)\n                }}\n            >\n            </input>\n            <input\n                type='text'\n                placeholder='price'\n                value={price}\n                onChange={(event) => {\n                    setPrice(event.target.value)\n                }}\n            >\n            </input>\n            <input\n                type='text'\n                placeholder='location'\n                value={location}\n                onChange={(event) => {\n                    setLocation(event.target.value)\n                }}\n            >\n            </input>\n            <input\n                type='checkbox'\n                value={willDeliver}\n                onChange={(event) => {\n                    setWillDeliver(event.target.value)\n                }}\n            >Will Deliver?\n            </input>\n        </form>\n    </div>\n    )\n}\n\nexport default NewPosts;","import React from \"react\";\n\nconst SinglePost = () => {\n    return <h1>Heyo</h1>\n}\n\nexport default SinglePost;","import { BASE_URL } from \"./constants\"\n\nexport async function getPage(){\n    const pageURL = BASE_URL + '/posts'\n    try{\n        const response = await fetch(pageURL);\n        const {data: {posts}} = await response.json()\n        return posts\n    } catch (err) {\n        console.error(err)\n    }\n}","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport { Login, Posts, Home, SinglePost, NewPosts } from \"./components\";\nimport { getPage } from \"./apiHelpers\";\n\nconst App = () => {\n    const [token, setToken] = useState(null);\n    const [page, setPage] = useState([])\n\n    useEffect(() => {\n        getPage().then(page => setPage(page))\n    }, [])\n\n    useEffect(() => {\n        const storedToken = localStorage.getItem('token');\n        if (storedToken) {\n            setToken(storedToken);\n        }\n    }, [])\n\n    return (<BrowserRouter>\n        <Link to=\"/login\">Login</Link>\n        <Link to=\"/home\">Home</Link>\n        <Link to=\"/posts\">Posts</Link>\n        <Link to=\"/profile\">Profile</Link>\n        <Link to=\"/register\">Register</Link>\n        <Link to=\"/newposts\">New Post</Link>\n        \n        <Route path=\"/login\" render={(routeProps) => <Login {...routeProps} setToken={setToken} isLoggedIn={!!token}/>}/>\n        <Route path=\"/register\" render={(routeProps) => <Login {...routeProps} setToken={setToken} isLoggedIn={!!token}/>}/>\n        <Route path=\"/home\" render={(routeProps) => <Home {...routeProps} isLoggedIn={!!token} token={token}/>}/>\n        <Route path=\"/posts\" render={(routeProps) => <Posts {...routeProps} page={page} isLoggedIn={!!token}/>}/>\n        <Route path=\"/posts/:postId\" render={(routeProps) => <SinglePost {...routeProps} />}/> \n        <Route path=\"newposts\" render={(routeProps) => <NewPosts {...routeProps} isLoggedIn={!!token}/>}/>      \n        \n    </BrowserRouter>)\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('app')\n)"],"sourceRoot":""}